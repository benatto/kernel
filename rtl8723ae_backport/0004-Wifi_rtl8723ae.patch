--- linux-3.6.3/drivers/net/wireless/rtlwifi/wifi.h	2013-06-20 15:20:44.846225932 -0300
+++ linux-3.6.3-devel/drivers/net/wireless/rtlwifi/wifi.h	2013-06-21 10:45:13.422289863 -0300
@@ -104,6 +104,9 @@
 /* for early mode */
 #define FCS_LEN				4
 #define EM_HDR_LEN			8
+
+#define ETH_ALLEN            6
+
 enum intf_type {
 	INTF_PCI = 0,
 	INTF_USB = 1,
@@ -188,6 +191,12 @@
 	ERFOFF
 };
 
+/*Polarity cntrol enum*/
+enum rt_polarity_ctl {
+	RT_POLARITY_LOW_ACT = 0,
+	RT_POLARITY_HIGH_ACT = 1
+};
+
 struct bb_reg_def {
 	u32 rfintfs;
 	u32 rfintfi;
@@ -207,6 +216,11 @@
 	u32 rftx_afe;
 	u32 rflssi_readback;
 	u32 rflssi_readbackpi;
+	u32 rf_rbpi; /* rflssi_readback */
+	u32 rf_rb;	/* rflssi_readbackpi */
+	u32 rfsw_ctrl;
+	u32 rftxiq_imbal;
+	u32 rfrxiq_imbal;
 };
 
 enum io_type {
@@ -350,6 +364,11 @@
 	RT_CID_819x_WNC_COREGA = 31,
 	RT_CID_819x_Foxcoon = 32,
 	RT_CID_819x_DELL = 33,
+	RT_CID_819x_PRONETS = 34,
+	RT_CID_819x_Edimax_ASUS = 35,
+	RT_CID_NETGEAR = 36,
+	RT_CID_PLANEX = 37,
+	RT_CID_CC_C = 38,
 };
 
 enum hw_descs {
@@ -504,6 +523,7 @@
 	RTL_IMR_ROK,		/*Receive DMA OK Interrupt */
 	RTL_IBSS_INT_MASKS,	/*(RTL_IMR_BcnInt | RTL_IMR_TBDOK |
 				 * RTL_IMR_TBDER) */
+	RTL_IMR_C2HCMD, /*FW Interrupt*/
 
 	/*CCK Rates, TxHT = 0 */
 	RTL_RC_CCK_RATE1M,
@@ -901,6 +921,13 @@
 	u8 num_total_rfpath;
 	struct phy_parameters hwparam_tables[MAX_TAB];
 	u16 rf_pathmap;
+
+	bool iqk_initialized;
+	
+	enum rt_polarity_ctl polarity_ctl;
+
+	/* MAX_PG_GROUP groups of pwr diff by rates */
+	u32 mcs_offset[MAX_PG_GROUP][16];
 };
 
 #define MAX_TID_COUNT				9
@@ -913,6 +940,11 @@
 #define RTL_AGG_EMPTYING_HW_QUEUE_ADDBA		2
 #define RTL_AGG_EMPTYING_HW_QUEUE_DELBA		3
 
+/*Needed by adhoc stuff from RTL8723AE*/
+struct rssi_sta{
+	long undec_sm_pwdb;
+};
+
 struct rtl_ht_agg {
 	u16 txq_id;
 	u16 wait_for_ba;
@@ -931,7 +963,9 @@
 	u8 ratr_index;
 	u8 wireless_mode;
 	u8 mimo_ps;
+	
 	struct rtl_tid_data tids[MAX_TID_COUNT];
+	struct rssi_sta rssi_stat; /*just used for ap adhoc or mesh*/
 } __packed;
 
 struct rtl_priv;
@@ -1029,8 +1063,66 @@
 	/*QOS & EDCA */
 	struct ieee80211_tx_queue_params edca_param[RTL_MAC80211_NUM_QUEUE];
 	struct rtl_qos_parameters ac[AC_MAX];
+
+	/*Counters*/
+	u64 last_txok_cnt;
+	u64 last_rxok_cnt;
+	u32 last_bt_edca_ul;
+	u32 last_bt_edca_dl;
+};
+/*RTL8723AE */
+struct btdm_8723{
+	bool all_off;
+	bool agc_table_en;
+	bool adc_back_off_on;
+	bool b2_ant_hid_en;
+	bool low_penalty_rate_adaptive;
+	bool rf_rx_lpf_shrink;
+	bool reject_aggre_pkt;
+	bool tra_tdma_on;
+	u8 tra_tdma_nav;
+	u8 tra_tdma_ant;
+	bool tdma_on;
+	u8 tdma_ant;
+	u8 tdma_nav;
+	u8 tdma_dac_swing;
+	u8 fw_dac_swing_lvl;
+	bool ps_tdma_on;
+	u8 ps_tdma_byte[5];
+	bool pta_on;
+	u32 val_0x6c0;
+	u32 val_0x6c8;
+	u32 val_0x6cc;
+	bool sw_dac_swing_on;
+	u32 sw_dac_swing_lvl;
+	u32 wlan_act_hi;
+	u32 wlan_act_lo;
+	u32 bt_retry_index;
+	bool dec_bt_pwr;
+	bool ignore_wlan_act;
+};
+
+/*RTL8723AE Coexist struct*/
+struct bt_coexist_8723{
+	u32 high_priority_tx;
+	u32 high_priority_rx;
+	u32 low_priority_tx;
+	u32 low_priority_rx;
+	
+	u8 c2h_bt_info;
+
+	bool c2h_bt_info_req_sent;
+	bool c2h_bt_inquiry_page;
+
+	u32 bt_inq_page_start_time;
+	u8 bt_retry_cnt;
+	u8 c2h_bt_info_original;
+	u8 bt_inquiry_page_cnt;
+
+	struct btdm_8723 btdm;	
 };
 
+
 struct rtl_hal {
 	struct ieee80211_hw *hw;
 
@@ -1083,6 +1175,14 @@
 	bool load_imrandiqk_setting_for2g;
 
 	bool disable_amsdu_8k;
+
+	bool fw_ready;
+
+	bool up_first_time;
+
+	struct bt_coexist_8723 hal_coex_8723;
+
+	bool being_init_adapter;
 };
 
 struct rtl_security {
@@ -1144,6 +1244,12 @@
 	bool disable_tx_int;
 	char ofdm_index[2];
 	char cck_index;
+
+	/*New fields needed by RTL8723AE*/
+	long entry_min_undec_sm_pwdb;
+	long entry_max_undec_sm_pwdb;
+	long undec_sm_pwdb; /*out dm*/
+	
 };
 
 #define	EFUSE_MAX_LOGICAL_SIZE			256
@@ -1223,6 +1329,8 @@
 
 	/*channel plan */
 	u8 channel_plan;
+
+	u8 eprom_chnl_txpwr_ht40_2sdf[2][CHANNEL_GROUP_MAX];
 };
 
 struct rtl_ps_ctl {
@@ -1334,6 +1442,10 @@
 	bool packet_toself;
 	bool packet_beacon;	/*for rssi */
 	char cck_adc_pwdb[4];	/*for rx path selection */
+
+	s8 rx_mimo_sig_qual[2];
+
+	u8 psaddr[ETH_ALLEN];
 };
 
 struct rt_link_detect {
@@ -1350,6 +1462,9 @@
 	u32 tidtx_in4period[MAX_TID_COUNT][4];
 	u32 tidtx_inperiod[MAX_TID_COUNT];
 	bool higher_busytxtraffic[MAX_TID_COUNT];
+
+	bool tx_busy_traffic;
+	bool rx_busy_traffic;
 };
 
 struct rtl_tcb_desc {
@@ -1469,6 +1584,10 @@
 	void (*dm_dynamic_txpower) (struct ieee80211_hw *hw);
 	void (*allow_all_destaddr) (struct ieee80211_hw *hw, bool allow_all_da,
 								bool write_into_reg);
+	void (*c2h_command_handle) (struct ieee80211_hw *hw);
+	void (*bt_wifi_media_status_notify) (struct ieee80211_hw *hw,
+										 bool mstate);
+	void (*bt_coex_off_before_lps) (struct ieee80211_hw *hw);
 };
 
 struct rtl_intf_ops {
@@ -1652,6 +1771,15 @@
 	u8 backoff_enable_flag;
 	char backoffval_range_max;
 	char backoffval_range_min;
+
+	/*New fields needed by RTL8723AE*/
+	u8 cursta_cstate;
+	u8 presta_cstate;
+	u8 curmultista_cstate;
+	u8 back_val;
+	u8 back_range_max;
+	u8 back_range_min;
+	
 };
 
 struct rtl_priv {
@@ -1696,14 +1824,33 @@
 	struct ps_t dm_pstable;
 
 	/* data buffer pointer for USB reads */
-	__le32 *usb_data;
-	int usb_data_index;
+	/*__le32 *usb_data;
+	int usb_data_index;*/
 
 	/*This must be the last item so
 	   that it points to the data allocated
 	   beyond  this structure like:
 	   rtl_pci_priv or rtl_usb_priv */
 	u8 priv[0];
+	
+	/*RTL8723AE needed*/
+	union{
+		struct { /*data buffer pointer USB reads*/
+			__le32 *usb_data;
+			int usb_data_index;
+			bool initialized;
+		};
+		struct { /*section for 8723ae*/
+			bool reg_init;
+			u32 reg_874;
+			u32 reg_c70;
+			u32 reg_85c;
+			u32 reg_a74;
+			bool bt_operation_on;
+		};
+	};	
+
+	
 };
 
 #define rtl_priv(hw)		(((struct rtl_priv *)(hw)->priv))
@@ -1729,6 +1876,7 @@
 	BT_CSR_BC4 = 3,
 	BT_CSR_BC8 = 4,
 	BT_RTL8756 = 5,
+	BT_RTL8723A = 6,
 };
 
 enum bt_cur_state {
@@ -1760,6 +1908,8 @@
 	u8 eeprom_bt_coexist;
 	u8 eeprom_bt_type;
 	u8 eeprom_bt_ant_num;
+	u8 eeprom_bt_ant_isol;
+	
 	u8 eeprom_bt_ant_isolation;
 	u8 eeprom_bt_radio_shared;
 
@@ -1794,6 +1944,26 @@
 	u8 reg_bt_iso;
 	u8 reg_bt_sco;
 
+	u32 cstate; /*needed by RTL8723AE*/
+	u32 cstate_h; /*needed by RTL8723AE*/
+	u32 previous_state_h; /*needed by RTL8723AE*/
+
+	u8 lps_counter;
+
+	bool hw_coexist_all_off;
+	bool bt_busy;
+	bool hold_for_bt_operation;
+	u8 bt_profile_case;
+	u8 bt_profile_action;
+	u8 bt_active_zero_cnt;
+
+	bool cur_bt_disabled;
+	bool pre_bt_disabled;
+	bool balance_on;	
+
+	u8 bt_pre_rssi_state1;
+
+	
 };
 
 
@@ -2102,4 +2272,11 @@
 	return ieee80211_find_sta(vif, bssid);
 }
 
+static inline struct ieee80211_sta *rtl_find_sta(struct ieee80211_hw *hw,
+						u8 *mac_addr)
+{
+	struct rtl_mac *mac = rtl_mac(rtl_priv(hw));
+	return ieee80211_find_sta(mac->vif, mac_addr);
+}
+
 #endif
